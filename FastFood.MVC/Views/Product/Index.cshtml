@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model FastFood.MVC.ViewModels.ProductIndexViewModel

@{
    Layout = "_Layout.cshtml";
}

@if ((await AuthorizationService.AuthorizeAsync(User, "AdminAccess")).Succeeded)
{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    <h1 class="display-5 mb-4">Danh sách sản phẩm</h1>
    <hr />
    <div class="d-flex justify-content-between align-items-center mb-3">
        <form method="get" asp-action="Index" asp-controller="Product">
            <div class="d-flex align-items-center gap-3">
                <div class="input-group" style="width: 300px;">
                    <input type="text" class="form-control" placeholder="Tìm kiếm theo tên..." name="productName" value="@Context.Request.Query["productName"]">
                    <button class="btn btn-primary" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
                <select asp-items="ViewBag.Category" class="form-select" name="category" style="width: 200px;">
                    <option value="">Tất cả danh mục</option>
                </select>
                <select class="form-select" name="priceSort" style="width: 200px;">
                    <option value="">Sắp xếp giá</option>
                    <option value="asc" selected="@(Context.Request.Query["priceSort"] == "asc")">
                        Giá: Thấp đến cao
                    </option>
                    <option value="desc" selected="@(Context.Request.Query["priceSort"] == "desc")">
                        Giá: Cao đến thấp
                    </option>
                </select>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-filter"></i> Lọc
                </button>
            </div>
        </form>

        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Tạo mới
        </a>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Products.FirstOrDefault()!.Category.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.FirstOrDefault()!.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.FirstOrDefault()!.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.FirstOrDefault()!.Price)</th>
                    <th>@Html.DisplayNameFor(model => model.Products.FirstOrDefault()!.SoldQuantity)</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Products)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Category.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>
                            @(item.Description?.Length > 50
                                    ? item.Description.Substring(0, 50) + "..."
                                    : item.Description)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.SoldQuantity)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.ProductID" class="btn btn-sm btn-warning me-1" title="Sửa">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.ProductID" class="btn btn-sm btn-info me-1 text-white" title="Chi tiết">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.ProductID" class="btn btn-sm btn-danger" title="Xóa">
                                <i class="bi bi-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    int itemCount = 0;
    <div class="col-lg-6 text-start text-lg-end wow slideInRight" data-wow-delay="0.1s">
        <ul class="nav nav-pills mb-5">
            @for (int c = 0; c <= Model.Categories.Count; c++)
            {
                <li class="nav-item me-1">
                    <a class="btn btn-outline-primary border-2 @(c == ViewBag.activeIndex ? "active" : "")"
                       data-bs-toggle="pill" href="#tab-@c">@(c == 0? "Tất cả": Model.Categories[c-1].Name)</a>
                </li>
            }
        </ul>
    </div>
    <div class="tab-content">
        @for (int c = 0; c <= Model.Categories.Count; c++)
        {
            itemCount = 0;
            <div id="tab-@c" class="tab-pane fade show p-0 @(c == ViewBag.activeIndex ? "active" : "")">
                <div class="row g-4">
                    @foreach (var product in Model.Products)
                    {
                        if (c == 0 || product.CategoryID == c)
                        {
                            itemCount++;
                            <div class="col-xl-3 col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.@(2 * itemCount - 1)s">
                                <div class="product-item">
                                    <div class="position-relative bg-light overflow-hidden">
                                        <img class="img-fluid w-100" src="@product.ImageUrl" alt="">
                                        @if (product.IsNew)
                                        {
                                            <div class="bg-secondary rounded text-white position-absolute start-0 top-0 m-4 py-1 px-3">New</div>
                                        }
                                        @if (product.IsPopular)
                                        {
                                            <div class="bg-secondary rounded text-white position-absolute start-0 top-0 m-4 py-1 px-3">Hot</div>
                                        }
                                    </div>
                                    <div class="text-center p-4">
                                        <a class="d-block h5 mb-2" asp-controller="Product"
                                           asp-action="Details" asp-route-id="@product.ProductID">@product.Name</a>
                                        <p class="text-body">@product.Description</p>
                                        <span class="text-primary me-1">@product.Price VND</span>
                                    </div>
                                    <div class="d-flex border-top">
                                        <small class="w-50 text-center border-end py-2">
                                            <a class="text-body" asp-controller="Order" asp-action="Index">Đặt ngay</a>
                                        </small>
                                        <small class="w-50 text-center py-2">
                                            <button onclick="addToCart(@product.ProductID)" class="btn btn-link text-body">Thêm vào giỏ</button>
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    </div>
}
@Html.AntiForgeryToken()

<script>
    function addToCart(productID, quantity = 1) {
        const token = $('input[name="__RequestVerificationToken"]').val();

        $.ajax({
            type: "POST",
            url: '/Cart/AddToCart',
            data: {
                productID: productID,
                quantity: quantity,
                __RequestVerificationToken: token
            },
            success: function (response) {
                console.log(response); 

                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                    return;
                }

                if (response.success) {
                    alert(response.message || "Đã thêm vào giỏ hàng!");
                    if (typeof updateCartBadge === "function") {
                        updateCartBadge(); 
                    }
                } else {
                    alert(response.message || "Đã xảy ra lỗi.");
                }
            },
            error: function () {
                alert("Lỗi khi thêm vào giỏ hàng.");
            }
        });
    }
</script>

