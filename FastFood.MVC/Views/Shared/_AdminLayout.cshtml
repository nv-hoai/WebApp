<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <title>Admin Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500&family=Lora:wght@600;700&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="~/lib/animate/animate.min.css" rel="stylesheet" />
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet" />
    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Template Stylesheet -->
    <link href="~/css/style.css" rel="stylesheet" />
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-2 d-none d-md-block bg-dark sidebar">
                <div class="position-sticky pt-3 text-white p-3">
                    <h1 class="fw-bold text-primary m-0">B<span class="text-secondary">ur</span>gz</h1>
                    <ul class="nav flex-column mt-4">
                        @{
                            var currentController = ViewContext.RouteData.Values["Controller"]?.ToString();
                            var currentAction = ViewContext.RouteData.Values["Action"]?.ToString();
                        }
                        @if (User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Admin" && currentAction == "Dashboard" ?"active text-white" : "text-white")"
                                asp-controller="Admin" asp-action="Dashboard">
                                    <i class="fas fa-tachometer-alt me-2"></i>Thống kê
                                </a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-white d-flex justify-content-between align-items-center text-nowrap"
                                data-bs-toggle="collapse"
                                href="#storeMenu"
                                role="button"
                                aria-expanded="@(new[] { "Product", "Promotion", "Order" }.Contains(currentController).ToString().ToLower())"
                                aria-controls="storeMenu">
                                    <span><i class="fas fa-store me-2"></i>Quản lý cửa hàng</span>
                                    <i class="fas fa-chevron-down toggle-icon"></i>
                                </a>
                                <div class="collapse @(new[] { "Product", "Promotion", "Order" }.Contains(currentController) ? "show" : "")" id="storeMenu">
                                    <ul class="nav flex-column ms-3">
                                        <li class="nav-item">
                                            <a class="nav-link @(currentController == "Product" ? "active text-white" : "text-white")"
                                            asp-controller="Product" asp-action="Index">
                                                <i class="fas fa-utensils me-2"></i>Thực đơn
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link @(currentController == "Promotion" ? "active text-white" : "text-white")"
                                            asp-controller="Promotion" asp-action="Index">
                                                <i class="fas fa-gift me-2"></i>Khuyến mãi
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link @(currentController == "Order" ? "active text-white" : "text-white")"
                                            asp-controller="Order" asp-action="Index">
                                                <i class="fas fa-shopping-cart me-2"></i>Đơn hàng
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Message" && currentAction == "Index" ?"active text-white" : "text-white")"
                                   asp-controller="Message" asp-action="Index">
                                    <i class="fas fa-tachometer-alt me-2"></i>Tin nhắn
                                </a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Admin" && currentAction == "Index" ?"active text-white" : "text-white")"
                                asp-controller="Admin" asp-action="Index">
                                    <i class="fas fa-users-cog me-2"></i>Quản lý tài khoản
                                </a>
                            </li>
                            <li class="nav-item">
                                <form class="form-inline p-0 m-0" asp-area="Identity" asp-page="/Account/Logout"
                                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                    <button type="submit" class="nav-link btn btn-link text-white">
                                        <i class="fas fa-sign-out-alt me-2"></i>Đăng xuất
                                    </button>
                                </form>
                            </li>
                        }
                        else if (User.IsInRole("Employee"))
                        {
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Admin" && currentAction == "Dashboard" ? "active text-white" : "text-white")"
                                asp-controller="Admin" asp-action="Dashboard">
                                    <i class="fas fa-tachometer-alt me-2"></i>Thống kê
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Order" ? "active text-white" : "text-white")"
                                asp-controller="Order" asp-action="Index">
                                    <i class="fas fa-shopping-cart me-2"></i>Quản lý đơn hàng
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Message" && currentAction == "Index" ?"active text-white" : "text-white")"
                                   asp-controller="Message" asp-action="Index">
                                    <i class="fas fa-tachometer-alt me-2"></i>Tin nhắn
                                </a>
                            </li>
                            <li class="nav-item">
                                <form class="form-inline p-0 m-0" asp-area="Identity" asp-page="/Account/Logout"
                                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                    <button type="submit" class="nav-link btn btn-link text-white">
                                        <i class="fas fa-sign-out-alt me-2"></i>Đăng xuất
                                    </button>
                                </form>
                            </li>
                        }
                        else if (User.IsInRole("Shipper"))
                        {
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Order" ? "active text-white" : "text-white")"
                                   asp-controller="Order" asp-action="Index">
                                    <i class="fas fa-shopping-cart me-2"></i>Đơn hàng
                                </a>
                            </li>
                            <li class="nav-item">
                                <form class="form-inline p-0 m-0" asp-area="Identity" asp-page="/Account/Logout"
                                      asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                    <button type="submit" class="nav-link btn btn-link text-white">
                                        <i class="fas fa-sign-out-alt me-2"></i>Đăng xuất
                                    </button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </nav>

            <!-- Main Content -->
            <div class="col-md-10 ms-sm-auto px-md-0">
                <!-- Top Navbar -->
                <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm px-4">
                    <div class="container-fluid">
                        @{
                            var hour = DateTime.Now.Hour;
                            var greeting = hour < 12 ? "Chào buổi sáng!" :
                            hour < 18 ? "Chào buổi chiều!" :
                            "Chào buổi tối!";
                        }
                        <span class="navbar-brand mb-0 h5">@greeting</span>
                        <div class="d-flex align-items-center">
							<partial name="_NotificationPartial" />
                            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> 
                                <small class="fa fa-user text-body"></small>
                            </a>
                        </div>
                    </div>
                </nav>
                <main class="p-4">
                    @RenderBody()
                </main>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
<style>
    body {
        min-height: 100vh;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize notifications if user is logged in
        if (document.getElementById('notificationDropdown')) {
            initializeNotifications();

            // Check for new notifications every 30 seconds
            setInterval(loadNotificationCount, 30000);

            // Mark all as read button
            document.querySelector('.mark-all-read').addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                markAllAsRead();
            });

            // Load notifications when dropdown is opened
            document.getElementById('notificationDropdown').addEventListener('show.bs.dropdown', loadNotifications);
        }
    });

    function initializeNotifications() {
        // Initial load of notification count
        loadNotificationCount();
    }

    function loadNotificationCount() {
        fetch('/Notifications/GetUnreadCount')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('notificationCount');
                badge.textContent = data.count;

                if (data.count > 0) {
                    badge.style.display = 'flex';
                } else {
                    badge.style.display = 'none';
                }
            })
            .catch(error => console.error('Error loading notification count:', error));
    }

    function loadNotifications() {
        const notificationList = document.querySelector('.notification-list');

        // Show loading indicator
        notificationList.innerHTML = '<div class="text-center p-3"><div class="spinner-border spinner-border-sm text-primary" role="status"></div></div>';

        fetch('/Notifications/GetNotifications')
            .then(response => response.json())
            .then(data => {
                if (data.length === 0) {
                    notificationList.innerHTML = '<div class="no-notifications">Không có thông báo</div>';
                    return;
                }

                let notificationsHtml = '';
                data.forEach(notification => {
                    const timeAgo = formatTimeAgo(new Date(notification.createdAt));
                    const unreadClass = notification.isRead ? '' : 'unread';
                    const iconClass = notification.iconClass || 'fa-bell';

                    notificationsHtml += `
                        <a href="${notification.link || '#'}" class="notification-item ${unreadClass}" data-id="${notification.notificationID}">
                            <div class="d-flex align-items-center">
                                <div class="notification-icon me-3">
                                    <i class="fa ${iconClass}"></i>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="notification-title">${notification.message}</div>
                                    <div class="notification-time">${timeAgo}</div>
                                </div>
                            </div>
                        </a>
                    `;
                });

                notificationList.innerHTML = notificationsHtml;

                // Add click handlers for marking notifications as read
                document.querySelectorAll('.notification-item.unread').forEach(item => {
                    item.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        markAsRead(id);
                        this.classList.remove('unread');
                    });
                });
            })
            .catch(error => {
                notificationList.innerHTML = '<div class="no-notifications">Không thể tải thông báo</div>';
                console.error('Error loading notifications:', error);
            });
    }

    function getAntiForgeryToken() {
        const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenElement ? tokenElement.value : '';
    }

    function markAsRead(id) {
        fetch('/Notifications/MarkAsRead', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': getAntiForgeryToken()
            },
            body: JSON.stringify({ notificationID: id })
        })
        .then(response => {
            if (response.ok) {
                loadNotificationCount();
            }
        });
    }

    function markAllAsRead() {
        fetch('/Notifications/MarkAllAsRead', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': getAntiForgeryToken()
            }
        })
        .then(response => {
            if (response.ok) {
                document.querySelectorAll('.notification-item.unread').forEach(item => {
                    item.classList.remove('unread');
                });
                loadNotificationCount();
            }
        });
    }

    function formatTimeAgo(date) {
        const now = new Date();
        const seconds = Math.floor((now - date) / 1000);

        if (seconds < 60) return 'Vừa xong';

        const minutes = Math.floor(seconds / 60);
        if (minutes < 60) return `${minutes} phút trước`;

        const hours = Math.floor(minutes / 60);
        if (hours < 24) return `${hours} giờ trước`;

        const days = Math.floor(hours / 24);
        if (days < 7) return `${days} ngày trước`;

        // Format date as dd/mm/yyyy
        const d = date.getDate().toString().padStart(2, '0');
        const m = (date.getMonth() + 1).toString().padStart(2, '0');
        const y = date.getFullYear();
        return `${d}/${m}/${y}`;
    }
</script>