@{
    Layout = "_Layout.cshtml";
}

<div class="container mt-4 order-container">
    <div class="row mb-3">
        <div class="text-lg-start">
            <div style="display: inline-flex; align-items: center;">
                <i class="fa-solid fa-list-check me-2 text-primary"></i>
                <h4 class="fw-bold mb-0">Danh sách đơn hàng</h4>
            </div>
        </div>
    </div>

    <table class="table table-hover order-table">
        <thead>
            <tr>
                <th>Mã đơn hàng</th>
                <th>Tổng tiền</th>
                <th onclick="sortByStatus()">
                    Trạng thái
                    <i id="statusSortIcon" class="bi bi-arrow-down-up ms-1"></i>
                </th>
                <th onclick="sortByCreated()">
                    Ngày tạo
                    <i id="createdSortIcon" class="bi bi-arrow-down-up ms-1"></i>
                </th>

                <th>Hoàn tất</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody id="orderList"></tbody>
    </table>
</div>

<script>
    let orders = [];
    let sortStatusAsc = true;
    let sortCreatedAsc = true;

    function renderOrders(orderData) {
        const tableBody = document.getElementById('orderList');
        tableBody.innerHTML = '';

        orderData.forEach(order => {
            let statusBadge = '';
            switch (order.Status) {
                case 'Hoàn tất':
                    statusBadge = '<span class="badge badge-success">Hoàn tất</span>';
                    break;
                case 'Đang giao':
                    statusBadge = '<span class="badge badge-warning">Đang giao</span>';
                    break;
                case 'Chờ xác nhận':
                    statusBadge = '<span class="badge badge-secondary">Chờ xác nhận</span>';
                    break;
                default:
                    statusBadge = `<span class="badge bg-light text-dark">${order.Status}</span>`;
            }

            const row = `
                <tr>
                    <td><a href="#" class="text-primary fw-semibold">ORD_${order.OrderID}</a></td>
                    <td>${order.TotalCharge.toLocaleString()} VND</td>
                    <td>${statusBadge}</td>
                    <td>${order.CreatedAt}</td>
                    <td>${order.CompletedAt || '-'}</td>
                    <td><button class="btn btn-sm btn-info">Xem</button></td>
                </tr>
            `;
            tableBody.innerHTML += row;
        });
    }

        function sortByStatus() {
        const sorted = [...orders].sort((a, b) => {
            if (a.Status < b.Status) return sortStatusAsc ? -1 : 1;
            if (a.Status > b.Status) return sortStatusAsc ? 1 : -1;
            return 0;
        });
        sortStatusAsc = !sortStatusAsc;

        const icon = document.getElementById("statusSortIcon");
        icon.className = sortStatusAsc ? "bi bi-arrow-up-short" : "bi bi-arrow-down-short";

        renderOrders(sorted);
    }


    function sortByCreated() {
        const sorted = [...orders].sort((a, b) => {
            const dateA = new Date(a.CreatedAt);
            const dateB = new Date(b.CreatedAt);
            return sortCreatedAsc ? dateA - dateB : dateB - dateA;
        });
        sortCreatedAsc = !sortCreatedAsc;

        const icon = document.getElementById("statusSortIcon");
        icon.className = sortStatusAsc ? "bi bi-arrow-up-short" : "bi bi-arrow-down-short";
        renderOrders(sorted);
    }

    document.addEventListener('DOMContentLoaded', () => {
        renderOrders(orders);
    });
</script>