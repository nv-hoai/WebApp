@{
    Layout = "_Layout.cshtml";
}
@model List<CartItem>

<!--Xem chi tiết giỏ hàng-->
<div class="container mt-1">
    <div class="row">
        <div class="text-lg-start mt-2 mb-1">
            <div class="cart-header">
                <i class="fa-solid fa-cart-shopping cart-icon"></i>
                <h4>Chi tiết giỏ hàng</h4>
            </div>
        </div>
    </div>

    <table class="table table-bordered table-hover">
        <thead class="text-center">
            <tr>
                <th scope="col">Hình ảnh</th>
                <th scope="col">Tên sản phẩm</th>
                <th scope="col">Số lượng</th>
                <th scope="col">Giá gốc</th>
                <th scope="col">Khuyến mãi</th> @* New column for promotions *@
                <th scope="col">Giá sau giảm</th>
                <th scope="col">Thành tiền</th>
                <th scope="col">Thao tác</th>
            </tr>
        </thead>
        <tbody id="cartItems">
            @if (TempData["CartError"] != null)
            {
                <tr>
                    <td colspan="8">
                        <div class="alert alert-danger" role="alert">
                            @TempData["CartError"]
                        </div>
                    </td>
                </tr>
            }
            @foreach (var item in Model)
            {
                <tr data-product-id="@item.ProductID">
                    <td class="text-center">
                        @if (item.Product != null)
                        {
                            <img src="@item.Product.ImageUrl" alt="Ảnh sản phẩm" width="60" />
                        }
                        else
                        {
                            <span class="text-danger">Không có ảnh</span>
                        }
                    </td>
                    <td>@item.ProductName</td>
                    <td class="text-center">
                        <button type="button" class="btn-decrease btn btn-danger btn-sm" style="color:white" data-productid="@item.ProductID">-</button>
                        <span class="item-quantity btn btn-info" style="background-color:transparent; padding: 2.5px">@item.Quantity</span>
                        <button type="button" class="btn-increase btn btn-success btn-sm" data-productid="@item.ProductID">+</button>
                    </td>
                    <td class="text-decoration-line-through text-muted me-2 text-center">
                        @((item.UnitPrice * 1000).ToString("#,##0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))) VND
                    </td>
                    <td class="text-center">
                        @if (item.Promotion != null)
                        {
                            <span class="badge bg-success">@item.PromotionName</span>
                            <div>Giảm @(item.Promotion.DiscountPercent * 100)%</div>
                        }
                        else
                        {
                            <span class="text-muted">Không có</span>
                        }
                    </td>
                    <td class="fw-bold text-danger text-center">
                        @((item.DiscountedPrice * 1000).ToString("#,##0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))) VND
                    </td>
                    <td class="item-subtotal text-success text-center">
                        @((item.SubTotal * 1000).ToString("#,##0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))) VND
                    </td>
                    <td class="text-center">
                        <a asp-action="Details" asp-route-productID="@item.ProductID"
                           class="btn btn-info">
                            Chi tiết
                        </a>
                        <button class="btn-delete btn btn-danger" data-productid="@item.ProductID">
                            Xóa
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!--Nhập thông tin địa chỉ giao hàng-->
<div class="container mt-1">
    <div class="row">
        <div class="text-lg-start mt-2 mb-1">
            <div style="display: inline-flex; align-items: center;">
                <i class="fa-solid fa-location-dot" style="margin-right: 8px;"></i>
                <h4>Địa chỉ nhận hàng</h4>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <input type="text" class="form-control custom-radius" id="addressInput" placeholder="Nhập địa chỉ nhận hàng" required />
        </div>
    </div>
</div>

<!--Chọn hình thức giao hàng & khuyến mãi-->
<div class="container mt-1">
    <h4 class="mt-4">Phương thức giao hàng</h4>
    <div class="btn-group" role="group" aria-label="Phương thức giao hàng">
        <button type="button" class="btn btn-outline-primary" id="btnPriority" data-shippingfee="50000">
            Ưu tiên: < 20 phút - <span class="price">50.000 VND</span>
        </button>
        <button type="button" class="btn btn-outline-primary" id="btnFast" data-shippingfee="40000">
			Nhanh: 15 phút - <span class="price">40.000 VND</span>
        </button>
        <button type="button" class="btn btn-outline-primary" id="btnEconomical" data-shippingfee="30000">
            Tiết kiệm: 30 phút - <span class="price">30.000 VND</span>
        </button>
    </div>
</div>

<div class="container mt-4 card p-4 shadow-sm">
    <h4 class="card-title mb-4 border-bottom pb-2">Tổng tiền đơn hàng</h4>

    <div class="mb-3">
        <div class="d-flex justify-content-between mb-2">
            <span class="text-muted">Phí tạm tính:</span> 
            <span>
                <span id="totalAmount" class="fw-bold">@((Model.Sum(m => m.SubTotal * 1000).ToString("#,##0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))))</span> VND
            </span> 
        </div>
        <div class="d-flex justify-content-between mb-2">
            <span class="text-muted">Phí giao hàng:</span>
            <span>
                <span id="shippingFee" class="fw-bold">0</span> VND
            </span>
        </div>
        <div class="d-flex justify-content-between pt-2 border-top">
            <span class="h5 mb-0">Tổng cộng:</span>
            <span class="h5 mb-0 text-primary">
                <span id="totalCharge" class="fw-bold">0</span> VND
            </span>
        </div>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
        <button type="button" class="btn btn-primary btn-lg" id="checkoutBtn">Thanh toán</button>
        <button type="button" class="btn btn-outline-secondary btn-lg" id="clearCartBtn">Xóa giỏ hàng</button> 
    </div>
</div>

@section Scripts
{
    @Html.AntiForgeryToken()
    <script>
        $(document).ready(function () {
            $('.btn-increase, .btn-decrease').click(function () {
                var button = $(this);
                var row = button.closest('tr');
                var productID = button.data('productid');

                var currentQty = parseInt(row.find('.item-quantity').text());
                var quantity = button.hasClass('btn-increase') ? currentQty + 1 : currentQty - 1;

                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    type: 'POST',
                    url: '/Cart/UpdateCart',
                    data: { 
                        productID: productID, 
                        quantity: quantity,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            if (quantity <= 0) {
                                row.fadeOut(200, function () {
                                    $(this).remove();
                                    updateTotal();
                                    updateCartCount();
                                });
                            } else {
                                row.find('.item-quantity')
                                    .fadeOut(100, function () {
                                        $(this).text(quantity).fadeIn(100);
                                    });

                                var priceText = row.find('td').eq(5).text().replace(/[^\d]/g, '');
                                var price = parseInt(priceText) || 0;
                                var subtotal = price * quantity;

                                row.find('.item-subtotal')
                                    .fadeOut(100, function () {
                                        $(this).text(subtotal.toLocaleString('vi-VN', { minimumFractionDigits: 0 }) + ' VND').fadeIn(100);
                                    });

                                updateTotal();
                                updateCartCount(); 
                            }
                        } else {
                            alert(response.message || "Có lỗi xảy ra khi cập nhật giỏ hàng.");
                        }
                    },
                    error: function () {
                        alert("Có lỗi xảy ra khi cập nhật giỏ hàng.");
                    }
                });
            });

            $('.btn-delete').click(function (e) {
                e.preventDefault();
                let button = $(this);
                let productId = button.data('productid');
                let productName = button.closest('tr').find('td').eq(1).text().trim();
                var token = $('input[name="__RequestVerificationToken"]').val();

                if (!confirm('Bạn có chắc muốn xóa món "' + productName + '" khỏi giỏ hàng?')) return;

                $.ajax({
                    url: '/Cart/RemoveFromCart',
                    method: 'POST',
                    data: { 
                        productID: productId,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            button.closest('tr').fadeOut(200, function () {
                                $(this).remove();
                                updateTotal();
                                updateCartCount(); 
                            });
                        } else {
                            alert(response.message || 'Không thể xóa sản phẩm. Vui lòng thử lại.');
                        }
                    },
                    error: function () {
                        alert('Không thể xóa sản phẩm. Vui lòng thử lại.');
                    }
                });
            });

            function updateTotal() {
                let total = 0;
                $('#cartItems tr').each(function () {
                    let subtotalText = $(this).find('.item-subtotal').text().replace(/[^\d]/g, '');
                    let subtotal = parseInt(subtotalText) || 0;
                    total += subtotal;
                });

                let shippingFee = parseInt($('#shippingFee').text().replace(/[^\d]/g, '')) || 0;
                let totalCharge = total + shippingFee;

                $('#totalAmount').text(total.toLocaleString('vi-VN', { minimumFractionDigits: 0 }));
                $('#totalCharge').text(totalCharge.toLocaleString('vi-VN', { minimumFractionDigits: 0 }));
            }

            $('#btnPriority, #btnFast, #btnEconomical').click(function () {
                var shippingFee = parseInt($(this).data('shippingfee')) || 0;
                $('#shippingFee').text(shippingFee.toLocaleString('vi-VN', { minimumFractionDigits: 0 }));
                updateTotal();
            });

            $('#clearCartBtn').click(function () {
                if (!confirm('Bạn có chắc muốn xóa toàn bộ giỏ hàng?')) return;
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    type: 'POST',
                    url: '/Cart/ClearCart',
					data: {
						__RequestVerificationToken: token
					},
                    success: function (response) {
                        if (response.success) {
                            $('#cartItems tr').fadeOut(200, function () {
                                $(this).remove();
                            });
                            $('#totalAmount').text('0 VND');
                            $('#totalCharge').text('0 VND');
                            $('#shippingFee').text('0 VND');
                            updateCartCount(); 
                            alert('Giỏ hàng đã được xóa.');
                        }
                    },
                    error: function () {
                        alert('Đã có lỗi xảy ra khi xóa giỏ hàng.');
                    }
                });
            });

            $('#checkoutBtn').click(function () {
                const address = $('#addressInput').val().trim();
                if (!address) {
                    alert("Vui lòng nhập địa chỉ giao hàng.");
                    return;
                }

                const shippingFeeText = $('#shippingFee').text().replace(/[^\d]/g, '');
                const shippingFee = parseInt(shippingFeeText) || 0;

                let shippingMethod;
                switch (shippingFee) {
                    case 50000: shippingMethod = 0; break;
                    case 40000: shippingMethod = 1; break;
                    case 30000: shippingMethod = 2; break;
                    default:
                        alert("Vui lòng chọn phương thức giao hàng.");
                        return;
                }
				var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    type: 'POST',
                    url: '/Order/CreateFromCart',
                    data: {
                        Address: address,
                        ShippingMethod: shippingMethod,
						__RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            window.location.href = '/Order/Index';
                        } else {
                            alert(response.message || 'Có lỗi xảy ra khi đặt hàng.');
                        }
                    },
                    error: function (xhr) {
                        const res = xhr.responseJSON;
                        alert(res?.message || 'Lỗi máy chủ, vui lòng thử lại sau.');
                    }
                });
            });
            updateCartCount();
        });

        function updateCartCount() {
            fetch('/Cart/GetCartCount')
                .then(res => res.json())
                .then(data => {
                    const badge = document.getElementById('cartCount');
                    if (badge) {
                        badge.textContent = data.count;
                    }
                });
        }
    </script>

}